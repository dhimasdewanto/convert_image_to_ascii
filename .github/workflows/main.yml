name: Flutter GitHub Actions

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - name: Setup Flutter
        uses: subosito/flutter-action@v1.4.0
        with:
          channel: 'beta'

      - name: Cache Pub Dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Download Pub Dependencies
        run: flutter pub get

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.SIGNING_KEY }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ALIAS }}" >> android/key.properties

      # - name: Run Unit Test
      #   run: flutter test

      - name: Build AppBundle
        run: flutter build appbundle --no-sound-null-safety

      # - name: Build AppBundle
      #   run: flutter build appbundle --obfuscate --split-debug-info=build/split_debug_info --no-sound-null-safety
      #   env:
      #     KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
      #     KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      #     ALIAS: ${{ secrets.ALIAS }}
      #     KEY_PATH: key.jks

      - name: Get AppBundle
        uses: actions/upload-artifact@v2
        with:
          name: aab-ascii-generator
          path: build/app/outputs/bundle/release/app-release.aab

      # - name: Get ARM64 Obfuscate Symbols
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: obfuscate-ascii-generator-arm64
      #     path: build/split_debug_info/app.android-arm64.symbols

      # - name: Get ARM Obfuscate Symbols
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: obfuscate-ascii-generator-arm
      #     path: build/split_debug_info/app.android-arm.symbols

      # - name: Get X86 Obfuscate Symbols
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: obfuscate-ascii-generator-x86
      #     path: build/split_debug_info/app.android-x64.symbols
